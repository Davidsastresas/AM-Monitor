version: '{branch}-{build}'

image: Visual Studio 2019

build:
  verbosity: minimal

environment:
  matrix:
  - BUILD: 'Release'
    CONFIG: installer
    SHADOW_BUILD_DIR: C:\projects\qgroundcontrol\build_windows_install
    QT_MAKE_DIR: C:\Qt\Tools\QtCreator\bin
    QT_MINGW_DIR: C:\Qt\Tools\mingw810_64\bin
    QT_QMAKE_DIR: C:\Qt\5.15.0\mingw81_64\bin

install:
  - git submodule update --init --recursive
  - mkdir %LOCALAPPDATA%\QtProject && copy test\qtlogging.ini %LOCALAPPDATA%\QtProject\
  - set QTDIR=C:\Qt\5.10.1\msvc2017_64
  - set PATH=%QTDIR%\bin;C:\Qt\Tools\mingw530_32\bin;%PATH%;
  - ps: |
          $env:PATH = $env:PATH;"C:\Qt\Tools\QtCreator\bin";"C:\Qt\Tools\mingw810_64\bin";"C:\Qt\5.15.0\mingw81_64\bin";
  # - ps: |
  #     Write-Host "Installing Qt..." -ForegroundColor Cyan
  #     $qt7zPath = "$($env:USERPROFILE)\Qt-5.10.0.7z"
  #     Write-Host "Downloading..."
  #     (New-Object Net.WebClient).DownloadFile('https://qgroundcontrol.s3-us-west-2.amazonaws.com/dependencies/Qt-QGC-5.12.6.7z', $qt7zPath)
  #     Write-Host "Unzipping..."
  #     cmd /c start /wait 7z x $qt7zPath -oC:\
  #     Write-Host "Installed" -ForegroundColor Green
  # - ps: |
  #     Write-Host "Installing GStreamer..." -ForegroundColor Cyan
  #     $msiPath = "$($env:USERPROFILE)\gstreamer-1.0-x86_64-1.14.4.msi"
  #     Write-Host "Downloading..."
  #     (New-Object Net.WebClient).DownloadFile('https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-x86_64-1.14.4.msi', $msiPath)
  #     Write-Host "Installing..."
  #     cmd /c start /wait msiexec /package $msiPath /passive ADDLOCAL=ALL
  #     Write-Host "Installed" -ForegroundColor Green
  # - ps: |
  #     Write-Host "Installing GStreamer dev..." -ForegroundColor Cyan
  #     $msiPath = "$($env:USERPROFILE)\gstreamer-1.0-devel-x86_64-1.14.4.msi"
  #     Write-Host "Downloading..."
  #     (New-Object Net.WebClient).DownloadFile('https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-devel-x86_64-1.14.4.msi', $msiPath)
  #     Write-Host "Installing..."
  #     cmd /c start /wait msiexec /package $msiPath /passive ADDLOCAL=ALL
  #     Write-Host "Installed" -ForegroundColor Green

build_script:
  - mkdir %SHADOW_BUILD_DIR% && cd %SHADOW_BUILD_DIR% && %QT_QMAKE_DIR%\qmake -r CONFIG+=%CONFIG% CONFIG+=WarningsAsErrorsOn %APPVEYOR_BUILD_FOLDER%\AM_Monitor.pro
  - cd %SHADOW_BUILD_DIR% && %QT_MAKE_DIR%\mingw32-make.exe
  - if "%CONFIG%" EQU "installer" ( copy %SHADOW_BUILD_DIR%\release\AM_Monitor.exe %APPVEYOR_BUILD_FOLDER%\AM_Monitor.exe )

# Generate the source server information to embed in the PDB
# Temporarily disabled while we try to figure out where this is located on appveyor image
#  - '"C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\srcsrv\srctool.exe" -r -u "%SHADOW_BUILD_DIR%\release\qgroundcontrol.pdb" | grep qgroundcontrol | grep -v moc_ | grep -v libs\\mavlink | grep -v build_windows_install | python %APPVEYOR_BUILD_FOLDER%\deploy\genPDBsrcsrv.py > %SHADOW_BUILD_DIR%\release\qgroundcontrol.pdb.srcsrv'
# write the source server info
#  - '"C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\srcsrv\pdbstr.exe" -w -i:%SHADOW_BUILD_DIR%\release\qgroundcontrol.pdb.srcsrv -p:%SHADOW_BUILD_DIR%\release\qgroundcontrol.pdb -s:srcsrv'
# build the symbol / PE store
#  - 'cd %APPVEYOR_BUILD_FOLDER% && "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\symstore.exe" add /compress /s symbols /f %SHADOW_BUILD_DIR%\release\qgroundcontrol.pdb /t qgroundcontrol'
#  - 'cd %APPVEYOR_BUILD_FOLDER% && "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\symstore.exe" add /compress /s symbols /f %SHADOW_BUILD_DIR%\release\qgroundcontrol.exe /t qgroundcontrol'
#  - ps: 'cd $env:appveyor_build_folder; .\deploy\lowercaseify_symbolstore.ps1'

# test_script:
#   - if "%CONFIG%" EQU "debug" ( %SHADOW_BUILD_DIR%\debug\qgroundcontrol --unittest )

artifacts:
  - path: AM_Monitor.exe
    name: am_monitorinstaller
  - path: build_windows_install\release\AM_Monitor.pdb
    name: pdb

deploy:

  # - provider: GitHub
  #   auth_token:
  #     secure: Bc/WjcsZkDvxa9Jy5f50vxxzmaEF1fBCZEkKERgFJl08OinTsKIiqPq4bFXJOXdL
  #   artifact: qgcinstaller
  #   draft: false
  #   prerelease: false
  #   on:
  #     CONFIG: installer
  #     appveyor_repo_tag: true
